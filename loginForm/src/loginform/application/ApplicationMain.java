/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginform.application;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableCellRenderer;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import loginform.guestDatabaseConn;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author vatsalpatel
 */
public class ApplicationMain extends javax.swing.JFrame {

    Connection connection;
    private static final DateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");

    /**
     * Creates new form ApplicationMain
     */
    public ApplicationMain() {
        initComponents();
        connection = guestDatabaseConn.dbConnection();
        this.setLocationRelativeTo(null);
        popTable(guestListTable);
    }

    class UpperCaseDocument extends PlainDocument {

        private boolean upperCase = true;

        public void setUpperCase(boolean flag) {
            upperCase = flag;
        }

        @Override
        public void insertString(int offset, String str, AttributeSet attSet)
                throws BadLocationException {
            if (upperCase) {
                str = str.toUpperCase();
            }
            super.insertString(offset, str, attSet);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        guestListTable = new javax.swing.JTable();
        addPersonPanel = new javax.swing.JPanel();
        fNameField = new javax.swing.JTextField();
        lNameField = new javax.swing.JTextField();
        fNameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        confirmPersonBtn = new javax.swing.JButton();
        addressField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        daysLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        stateField = new javax.swing.JTextField();
        zipCodeLabel = new javax.swing.JLabel();
        zipCodeField = new javax.swing.JTextField();
        cityLabel1 = new javax.swing.JLabel();
        numOfDays = new javax.swing.JSpinner();
        checkOutPanel = new javax.swing.JPanel();
        checkOutScrollPane = new javax.swing.JScrollPane();
        checkOutTable = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column){
                Component c = super.prepareRenderer(renderer, row, column);

                Calendar cal  = Calendar.getInstance();
                String expDateString = sdf.format(cal.getTime()).toString();

                if (!isRowSelected(row)) {
                    if (checkOutTable.getColumnCount() >= 0) {
                        String type = checkOutTable.getModel().getValueAt(row, 3).toString();
                        String currDate = getCurrentDate();
                        try{
                            Date toDate = new SimpleDateFormat("yyyy/MM/dd").parse(currDate);
                            Date checkOut = new SimpleDateFormat("yyyy/MM/dd").parse(type);
                            //c.setBackground("hello".equals(type) ? Color.RED : Color.WHITE);
                            if(checkOut.compareTo(toDate) < 0){
                                c.setBackground(Color.RED);
                            }else{
                                c.setBackground(Color.WHITE);
                            }
                        }catch(Exception e){
                            System.out.println(e);
                        }
                    }
                }

                return c;
            }
        };
        removePersonPanel = new javax.swing.JPanel();
        guestIdField = new javax.swing.JTextField();
        guestIdLabel = new javax.swing.JLabel();
        removeGuestButton = new javax.swing.JButton();
        guestViewPanel = new javax.swing.JPanel();
        showLName = new javax.swing.JTextField();
        showFName = new javax.swing.JTextField();
        showGuestId = new javax.swing.JTextField();
        showAddress = new javax.swing.JTextField();
        showCity = new javax.swing.JTextField();
        showState = new javax.swing.JTextField();
        showZipCode = new javax.swing.JTextField();
        showADate = new javax.swing.JTextField();
        showDeDate = new javax.swing.JTextField();
        showIdLabel = new javax.swing.JLabel();
        showFNameLabel = new javax.swing.JLabel();
        showLNameLabel = new javax.swing.JLabel();
        showAdLabel = new javax.swing.JLabel();
        ShowCityLabel = new javax.swing.JLabel();
        showStateLabel = new javax.swing.JLabel();
        showZipLabel = new javax.swing.JLabel();
        showAirDateLabel = new javax.swing.JLabel();
        showDepDateLabel = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        addDays = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        homeButton.setText("HOME");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("REMOVE");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        checkOutButton.setText("CHECKOUT");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkOutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        guestListTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        guestListTable.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        guestListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        guestListTable.setGridColor(new java.awt.Color(0, 0, 0));
        guestListTable.setRowHeight(40);
        guestListTable.setRowMargin(5);
        guestListTable.setRowSelectionAllowed(false);
        guestListTable.setShowGrid(true);
        guestListTable.setSize(new java.awt.Dimension(10, 10));
        guestListTable.getTableHeader().setReorderingAllowed(false);
        guestListTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                guestListTableFocusGained(evt);
            }
        });
        guestListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guestListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(guestListTable);

        jLayeredPane1.add(jScrollPane1, "card2");

        fNameField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        lNameField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        fNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        fNameLabel.setText("First Name");

        lNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        lNameLabel.setText("Last Name");

        confirmPersonBtn.setText("CONTINUE");
        confirmPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPersonBtnActionPerformed(evt);
            }
        });

        addressField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        addressLabel.setText("ADDRESS");

        cityField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        daysLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        daysLabel.setText("DAYS");

        stateLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        stateLabel.setText("STATE");

        stateField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        zipCodeLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        zipCodeLabel.setText("ZIP CODE");

        zipCodeField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        cityLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        cityLabel1.setText("CITY");

        numOfDays.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N

        javax.swing.GroupLayout addPersonPanelLayout = new javax.swing.GroupLayout(addPersonPanel);
        addPersonPanel.setLayout(addPersonPanelLayout);
        addPersonPanelLayout.setHorizontalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addComponent(fNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(confirmPersonBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressField)))
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addComponent(daysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(addPersonPanelLayout.createSequentialGroup()
                                .addComponent(cityLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(stateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(zipCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zipCodeField, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)))))
                .addGap(38, 38, 38))
        );
        addPersonPanelLayout.setVerticalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(daysLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPersonPanelLayout.createSequentialGroup()
                        .addComponent(numOfDays)
                        .addGap(5, 5, 5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(confirmPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        UpperCaseDocument ucd = new UpperCaseDocument();
        stateField.setDocument(ucd);

        jLayeredPane1.add(addPersonPanel, "card3");
        addPersonPanel.setVisible(false);

        checkOutTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkOutTable.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        checkOutTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        checkOutTable.setGridColor(new java.awt.Color(0, 0, 0));
        checkOutTable.setRowHeight(40);
        checkOutTable.setRowMargin(5);
        checkOutTable.setRowSelectionAllowed(false);
        checkOutTable.setShowGrid(true);
        checkOutTable.setSize(new java.awt.Dimension(10, 10));
        checkOutTable.getTableHeader().setReorderingAllowed(false);
        checkOutTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                checkOutTableFocusGained(evt);
            }
        });
        checkOutScrollPane.setViewportView(checkOutTable);

        javax.swing.GroupLayout checkOutPanelLayout = new javax.swing.GroupLayout(checkOutPanel);
        checkOutPanel.setLayout(checkOutPanelLayout);
        checkOutPanelLayout.setHorizontalGroup(
            checkOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkOutPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkOutScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        checkOutPanelLayout.setVerticalGroup(
            checkOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkOutScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );

        jLayeredPane1.add(checkOutPanel, "card5");

        guestIdLabel.setText("GuestId");

        removeGuestButton.setText("REMOVE");
        removeGuestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeGuestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removePersonPanelLayout = new javax.swing.GroupLayout(removePersonPanel);
        removePersonPanel.setLayout(removePersonPanelLayout);
        removePersonPanelLayout.setHorizontalGroup(
            removePersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removePersonPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(removePersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeGuestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removePersonPanelLayout.createSequentialGroup()
                        .addComponent(guestIdLabel)
                        .addGap(18, 18, 18)
                        .addComponent(guestIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(617, Short.MAX_VALUE))
        );
        removePersonPanelLayout.setVerticalGroup(
            removePersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removePersonPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(removePersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestIdLabel)
                    .addComponent(guestIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(removeGuestButton)
                .addContainerGap(416, Short.MAX_VALUE))
        );

        jLayeredPane1.add(removePersonPanel, "card4");
        removePersonPanel.setVisible(false);

        guestViewPanel.setPreferredSize(new java.awt.Dimension(844, 552));

        showLName.setEditable(false);
        showLName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLNameActionPerformed(evt);
            }
        });

        showFName.setEditable(false);
        showFName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showGuestId.setEditable(false);
        showGuestId.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showAddress.setEditable(false);
        showAddress.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showCity.setEditable(false);
        showCity.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showState.setEditable(false);
        showState.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showZipCode.setEditable(false);
        showZipCode.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showADate.setEditable(false);
        showADate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showDeDate.setEditable(false);
        showDeDate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        showIdLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showIdLabel.setText("GuestId");

        showFNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showFNameLabel.setText("First Name");

        showLNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showLNameLabel.setText("Last Name");

        showAdLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showAdLabel.setText("Address");

        ShowCityLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        ShowCityLabel.setText("State");

        showStateLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showStateLabel.setText("City");

        showZipLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showZipLabel.setText("Zip Code");

        showAirDateLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showAirDateLabel.setText("Arrival");

        showDepDateLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        showDepDateLabel.setText("Departure");

        addDays.setText("Continue");
        addDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDaysActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout guestViewPanelLayout = new javax.swing.GroupLayout(guestViewPanel);
        guestViewPanel.setLayout(guestViewPanelLayout);
        guestViewPanelLayout.setHorizontalGroup(
            guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestViewPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(guestViewPanelLayout.createSequentialGroup()
                        .addComponent(showIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(guestViewPanelLayout.createSequentialGroup()
                        .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showFNameLabel)
                            .addComponent(showStateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showAdLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showAirDateLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(guestViewPanelLayout.createSequentialGroup()
                                .addComponent(showFName, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showLNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(showLName, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(showAddress)
                            .addGroup(guestViewPanelLayout.createSequentialGroup()
                                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showADate, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showCity, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(guestViewPanelLayout.createSequentialGroup()
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(addDays)))
                                .addGap(36, 36, 36)
                                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(guestViewPanelLayout.createSequentialGroup()
                                        .addComponent(ShowCityLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showState, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(showZipLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(guestViewPanelLayout.createSequentialGroup()
                                        .addComponent(showDepDateLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showDeDate, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        guestViewPanelLayout.setVerticalGroup(
            guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guestViewPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showIdLabel)
                    .addComponent(showGuestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showFNameLabel)
                    .addComponent(showFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showLNameLabel)
                    .addComponent(showLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showAdLabel)
                    .addComponent(showAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showStateLabel)
                    .addComponent(showState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShowCityLabel)
                    .addComponent(showZipLabel)
                    .addComponent(showZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showAirDateLabel)
                    .addComponent(showADate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showDepDateLabel)
                    .addComponent(showDeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(guestViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDays))
                .addContainerGap(243, Short.MAX_VALUE))
        );

        jLayeredPane1.add(guestViewPanel, "card6");
        guestViewPanel.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guestListTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_guestListTableFocusGained

    }//GEN-LAST:event_guestListTableFocusGained

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        addPersonPanel.setVisible(false);
        removePersonPanel.setVisible(false);
        checkOutPanel.setVisible(false);
        jScrollPane1.setVisible(true);   
        popTable(guestListTable);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        jScrollPane1.setVisible(false);
        addPersonPanel.setVisible(true);
        removePersonPanel.setVisible(false);
        checkOutPanel.setVisible(false);
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        jScrollPane1.setVisible(false);
        addPersonPanel.setVisible(false);
        removePersonPanel.setVisible(true);
        checkOutPanel.setVisible(false);
    }//GEN-LAST:event_removeButtonActionPerformed

    private void confirmPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPersonBtnActionPerformed
        addGuest();
    }//GEN-LAST:event_confirmPersonBtnActionPerformed

    private void removeGuestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeGuestButtonActionPerformed
        removeGuest();
    }//GEN-LAST:event_removeGuestButtonActionPerformed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        popTable(checkOutTable);
        jScrollPane1.setVisible(false);
        addPersonPanel.setVisible(false);
        removePersonPanel.setVisible(false);
        checkOutPanel.setVisible(true);
    }//GEN-LAST:event_checkOutButtonActionPerformed

    private void guestListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guestListTableMouseClicked
        jScrollPane1.setVisible(false);
        guestViewPanel.setVisible(true);
        try{
            int row = guestListTable.getSelectedRow();
            String tableClick = (guestListTable.getModel().getValueAt(row, 0).toString());
            String query = "Select * From 'guestList' Where FirstName = '"+tableClick+"'";
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs;
            rs = pst.executeQuery();
            if(rs.next()){
                String add1 = rs.getString("GuestId").toString();
                showGuestId.setText(add1);
                String add2 = rs.getString("FirstName");
                showFName.setText(add2);
                String add3 = rs.getString("LastName");
                showLName.setText(add3);
                String add4 = rs.getString("Address");
                showAddress.setText(add4);
                String add5 = rs.getString("City");
                showCity.setText(add5);
                String add6 = rs.getString("State");
                showState.setText(add6);
                String add7 = rs.getString("ZipCode");
                showZipCode.setText(add7);
                String add8 = rs.getString("ArrivalDate");
                showADate.setText(add8);
                String add9 = rs.getString("DepartureDate");
                showDeDate.setText(add9);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
       
    }//GEN-LAST:event_guestListTableMouseClicked

    private void showLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showLNameActionPerformed

    private void checkOutTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkOutTableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_checkOutTableFocusGained

    private void addDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDaysActionPerformed
        // what the fuck is going on here/
        // figure our what "addDays" action is!.
        
    }//GEN-LAST:event_addDaysActionPerformed

    private void popTable(JTable table) {
        table.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 24));
        try {
            String query = "select FirstName, LastName, ArrivalDate, DepartureDate from guestList";
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        table.setDefaultEditor(Object.class, null);
    }

    private void addGuest() {
        try {
            String query = "INSERT INTO 'guestList' (FirstName, LastName, Address, City, State, ZipCode, ArrivalDate, DepartureDate) Values(?,?,?,?,?,?, ?,?)";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, fNameField.getText());
            pst.setString(2, lNameField.getText());
            pst.setString(3, addressField.getText());
            pst.setString(4, cityField.getText());
            pst.setString(5, stateField.getText());
            pst.setString(6, zipCodeField.getText());
            pst.setString(7, getCurrentDate());
            pst.setString(8, setCheckOutDate((int) numOfDays.getValue()));

            int n1 = pst.executeUpdate();
            if (n1 > 0) {
                JOptionPane.showMessageDialog(null, "Success");
                clearJFieldsFromPanel(addPersonPanel);
                resetSpinner(addPersonPanel);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void removeGuest() {
        try {
            String query = "Delete From 'guestList' where guestId = ?";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setInt(1, Integer.parseInt(guestIdField.getText()));
            int n1 = pst.executeUpdate();
            if (n1 > 0) {
                JOptionPane.showMessageDialog(null, "Success");
                clearJFieldsFromPanel(removePersonPanel);
            } else {
                JOptionPane.showMessageDialog(null, "Guest Not Found!!");
                clearJFieldsFromPanel(removePersonPanel);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void clearJFieldsFromPanel(JPanel panel) {
        for (Component control : panel.getComponents()) {
            if (control instanceof JTextField) {
                JTextField ctrl = (JTextField) control;
                ctrl.setText(null);
            }
        }
    }

    private void resetSpinner(JPanel panel) {
        for (Component control : panel.getComponents()) {
            if (control instanceof JSpinner) {
                JSpinner ctrl = (JSpinner) control;
                ctrl.setValue(0);
            }
        }
    }

    private static String getCurrentDate() {
        Calendar cal = Calendar.getInstance();
        return sdf.format(cal.getTime());
    }

    private static String setCheckOutDate(int days) {
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DAY_OF_YEAR, days);
        return sdf.format(cal.getTime());
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ShowCityLabel;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addDays;
    private javax.swing.JPanel addPersonPanel;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JPanel checkOutPanel;
    private javax.swing.JScrollPane checkOutScrollPane;
    private javax.swing.JTable checkOutTable;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel cityLabel1;
    private javax.swing.JButton confirmPersonBtn;
    private javax.swing.JLabel daysLabel;
    private javax.swing.JTextField fNameField;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField guestIdField;
    private javax.swing.JLabel guestIdLabel;
    private javax.swing.JTable guestListTable;
    private javax.swing.JPanel guestViewPanel;
    private javax.swing.JButton homeButton;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField lNameField;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JSpinner numOfDays;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton removeGuestButton;
    private javax.swing.JPanel removePersonPanel;
    private javax.swing.JTextField showADate;
    private javax.swing.JLabel showAdLabel;
    private javax.swing.JTextField showAddress;
    private javax.swing.JLabel showAirDateLabel;
    private javax.swing.JTextField showCity;
    private javax.swing.JTextField showDeDate;
    private javax.swing.JLabel showDepDateLabel;
    private javax.swing.JTextField showFName;
    private javax.swing.JLabel showFNameLabel;
    private javax.swing.JTextField showGuestId;
    private javax.swing.JLabel showIdLabel;
    private javax.swing.JTextField showLName;
    private javax.swing.JLabel showLNameLabel;
    private javax.swing.JTextField showState;
    private javax.swing.JLabel showStateLabel;
    private javax.swing.JTextField showZipCode;
    private javax.swing.JLabel showZipLabel;
    private javax.swing.JTextField stateField;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField zipCodeField;
    private javax.swing.JLabel zipCodeLabel;
    // End of variables declaration//GEN-END:variables
}
