/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginform;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.*;
import java.awt.*;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.*;
import loginform.application.ApplicationMain;
/**
 *
 * @author vatsalpatel
 */
public class Login extends javax.swing.JFrame {
    Connection connection;
    private static final DateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        connection = sqliteConnection.dbConnection();
        this.setLocationRelativeTo(null);
        activeAccountFrame.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activeAccountFrame = new javax.swing.JFrame();
        goBack = new javax.swing.JButton();
        creatAccount = new javax.swing.JButton();
        rName = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        setPassword = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        userNameLabel = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        creatUserBtn = new javax.swing.JButton();

        activeAccountFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        activeAccountFrame.setMinimumSize(new java.awt.Dimension(508, 515));
        activeAccountFrame.setName("ActiveAccount"); // NOI18N

        goBack.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        goBack.setText("BACK");
        goBack.setActionCommand("");
        goBack.setMaximumSize(new java.awt.Dimension(138, 37));
        goBack.setMinimumSize(new java.awt.Dimension(138, 37));
        goBack.setPreferredSize(new java.awt.Dimension(283, 56));
        goBack.setSize(new java.awt.Dimension(138, 37));
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });

        creatAccount.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        creatAccount.setText("SUBMIT");
        creatAccount.setActionCommand("");
        creatAccount.setPreferredSize(new java.awt.Dimension(283, 56));
        creatAccount.setSize(new java.awt.Dimension(138, 37));
        creatAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatAccountActionPerformed(evt);
            }
        });

        rName.setForeground(new java.awt.Color(153, 153, 153));
        rName.setText("NAME");
        rName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rNameFocusLost(evt);
            }
        });

        userName.setForeground(new java.awt.Color(153, 153, 153));
        userName.setText("USERNAME");
        userName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userNameFocusLost(evt);
            }
        });

        setPassword.setForeground(new java.awt.Color(153, 153, 153));
        setPassword.setText("PASSWORD");
        setPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                setPasswordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout activeAccountFrameLayout = new javax.swing.GroupLayout(activeAccountFrame.getContentPane());
        activeAccountFrame.getContentPane().setLayout(activeAccountFrameLayout);
        activeAccountFrameLayout.setHorizontalGroup(
            activeAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activeAccountFrameLayout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(activeAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(activeAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(goBack, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(creatAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
        );
        activeAccountFrameLayout.setVerticalGroup(
            activeAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activeAccountFrameLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(rName, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(setPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(creatAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(goBack, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LogIn");
        setBackground(new java.awt.Color(255, 255, 255));

        loginButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginform/img/Accept-icon.png"))); // NOI18N
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setLabel("GO");
        loginButton.setMaximumSize(new java.awt.Dimension(128, 74));
        loginButton.setMinimumSize(new java.awt.Dimension(128, 74));
        loginButton.setPreferredSize(new java.awt.Dimension(128, 74));
        loginButton.setSize(new java.awt.Dimension(128, 64));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginButtonKeyPressed(evt);
            }
        });

        userNameLabel.setForeground(new java.awt.Color(153, 153, 153));
        userNameLabel.setText("Username");
        userNameLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userNameLabelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userNameLabelFocusLost(evt);
            }
        });
        userNameLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameLabelKeyTyped(evt);
            }
        });

        jPasswordField1.setText("Password");
        jPasswordField1.setSize(new java.awt.Dimension(80, 26));
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });

        creatUserBtn.setText("Active Account");
        creatUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(creatUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPasswordField1)
                    .addComponent(userNameLabel)
                    .addComponent(loginButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                .addGap(210, 210, 210))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(creatUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        logIn();
        this.setVisible(false);
        if(removeUser())
            JOptionPane.showMessageDialog(null, "Some Inactive Users were Deleted");
    }//GEN-LAST:event_loginButtonActionPerformed

    private void userNameLabelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameLabelKeyTyped

    }//GEN-LAST:event_userNameLabelKeyTyped

    private void userNameLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameLabelFocusGained
        if(userNameLabel.getText().equals("Username")){
            userNameLabel.setText("");
            userNameLabel.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_userNameLabelFocusGained

    private void userNameLabelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameLabelFocusLost
        if(userNameLabel.getText().equals("")){
            userNameLabel.setText("Username");
            userNameLabel.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_userNameLabelFocusLost

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        if(jPasswordField1.getText().equals("Password")){
            jPasswordField1.setText("");
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        if(jPasswordField1.getText().equals("")){
            jPasswordField1.setText("Password");
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void loginButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
           logIn();
        }
    }//GEN-LAST:event_loginButtonKeyPressed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
           logIn();
            this.setVisible(false);
            if(removeUser())
                JOptionPane.showMessageDialog(null, "Some Inactive Users were Deleted");
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void creatUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatUserBtnActionPerformed
        setVisible(false);
        activeAccountFrame.setVisible(true);
    }//GEN-LAST:event_creatUserBtnActionPerformed

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        goBackFrame();
    }//GEN-LAST:event_goBackActionPerformed

    private void rNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rNameFocusGained
        if(rName.getText().equals("NAME")){
            rName.setText("");
            rName.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_rNameFocusGained

    private void rNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rNameFocusLost
        if(rName.getText().equals("")){
            rName.setText("NAME");
            rName.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_rNameFocusLost

    private void userNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameFocusGained
         if(userName.getText().equals("USERNAME")){
            userName.setText("");
            userName.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_userNameFocusGained

    private void userNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameFocusLost
        if(userName.getText().equals("")){
            userName.setText("USERNAME");
            userName.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_userNameFocusLost

    private void setPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setPasswordFocusGained
        if(setPassword.getText().equals("PASSWORD")){
            setPassword.setText("");
            setPassword.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_setPasswordFocusGained

    private void setPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setPasswordFocusLost
        if(setPassword.getText().equals("")){
            setPassword.setText("PASSWORD");
            setPassword.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_setPasswordFocusLost

    private void creatAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatAccountActionPerformed
        createUser();
    }//GEN-LAST:event_creatAccountActionPerformed

  
    private void logIn(){
        try{
            String query = "select * from login where userName=? and Password=? ";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1,userNameLabel.getText());
            pst.setString(2,jPasswordField1.getText());
            
            ResultSet rs = pst.executeQuery();
            int count = 0;
            while(rs.next()){
                count = count+1;
            }
            if(count == 1){
                rs.close();
                pst.close();
                close();
                ApplicationMain app = new ApplicationMain();
                app.setVisible(true);
            }
            else if(count > 1){
                JOptionPane.showMessageDialog(null, rs);
            }
            else{
                JOptionPane.showMessageDialog(null, "Username and Password incorrect");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    
    private void createUser(){
        try{
            String query = "INSERT INTO 'login' (userName, Password, Name)values(?, ?, ?)";
            
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, userName.getText());
            pst.setString(2, setPassword.getText());
            pst.setString(3, rName.getText());
            int n1 = pst.executeUpdate();
            if(n1>0){
                JOptionPane.showMessageDialog(null, "Susscess!");
                clearFields();
                goBackFrame();
            }     
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private boolean removeUser(){
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DAY_OF_YEAR, -1);
        String date = sdf.format(cal.getTime());
        try{
            String query = "DELETE From 'login' Where date = ?";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, date);
            pst.executeUpdate(); 
            return true;
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return false;
    }
    
    private void goBackFrame(){
        //activeAccountFrame.setVisible(false);
        activeAccountFrame.dispose();
        setVisible(true);
    }
    
    private void clearFields(){
        rName.setText(null);
        userName.setText(null);
        setPassword.setText(null);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame activeAccountFrame;
    private javax.swing.JButton creatAccount;
    private javax.swing.JButton creatUserBtn;
    private javax.swing.JButton goBack;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField rName;
    private javax.swing.JTextField setPassword;
    private javax.swing.JTextField userName;
    private javax.swing.JTextField userNameLabel;
    // End of variables declaration//GEN-END:variables
}
